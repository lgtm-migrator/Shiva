; Test config for DQN
; NOTE: options within sections cannot have the same names
; some options are repeating, we need to get rid of duplicates

[MetaLearner]
type='SingleAgentMetaLearner'
start_mode="production"
optimize_env_hp=False
optimize_learner_hp=False
evolution=False
seeds = [0,1,2,3,4]

[Learner]
type='SingleAgentDDPGLearner'
using_buffer=True
episodes=15250
save_checkpoint_episodes=1000
; metrics =  ["Reward", "LossPerStep", "TotalReward"]
; load_agents='runs/ML-RoboCup-11-03-14:34/L-0'
load_agents = False
manual_play = True

[Algorithm]
algorithm='DDPG'
type="ParametrizedDDPGAlgorithm"
exploration_steps=50_000
replay_buffer=True
loss_function='MSELoss'
regularizer=0
recurrence=0
gamma=0.99
beta=0
epsilon_start=1
epsilon_end=0.02
epsilon_decay=0.00005
c=200
tau=0.001

[Agent]
optimizer_function='Adam'
learning_rate=0.001

[Network]
actor = {'layers': [1024, 512, 256, 128], 'activation_function': ['ReLU', 'ReLU','ReLU', 'ReLU'], 'output_function': None, 'last_layer': True}
critic = {'layers': [1024, 512, 256, 128], 'activation_function': ['ReLU', 'ReLU','ReLU', 'ReLU'], 'output_function': None, 'last_layer': True}

[Environment]
type='RoboCupDDPGEnvironment'
env_name='RoboCup'
port=45000
; action level
action_level = 'low'
; feature level
feature_level = 'low'
env_render = True
rcss_log = False
hfo_log = False
num_ep = 100
ep_length = 500
untouched = 200
determ = True
burn_in = 500
record_lib = False
record_serv = False
num_left = 1
num_right = 0
num_l_bot = 0
num_r_bot = 0
left_bin = 'helios10'
right_bin = 'helios11'
goalie = False
; per episode
reward_anneal = 1_000_000
offense_ball = 0
sync_mode = True
fullstate = True
verbose = False
log = 'log'
; Ball position
ball_x_min = -0.10
ball_x_max = 0.10
ball_y_min = -0.10
ball_y_max = 0.10
; Agent Positions
agents_x_min=-0.10
agents_x_max=0.10
agents_y_min=-0.10
agents_y_max=0.10
; Change Positions
change_ball_x=0.01
change_ball_y=0.01
change_agents_x=0.01
change_agents_y=0.01
change_every_x=100
init_env = True

; [Evaluation]
; env_type =          "Gym"
; environment =       ["CartPole-v1"]
; episodes =          10
; load_path =         ["runs/ML-Gym-CartPole-v1-10-20-20:07/", "runs/ML-Gym-CartPole-v1-10-20-20:09/", "runs/ML-Gym-CartPole-v1-10-20-20:48/"]
; metrics =           ["AveRewardPerEpisode", "MaxEpisodicReward", "MinEpisodicReward", "AveStepsPerEpisode"]
; env_render =        True

[Buffer]
type='SimpleBuffer'
capacity=1_000_000
batch_size=128

[Admin]
save =              True
traceback =         True
directory = {'runs': '/runs'}

[ImageProcessing]


[VideoProcessing]
