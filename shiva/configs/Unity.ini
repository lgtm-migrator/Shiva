; Test config for DQN
; NOTE: options within sections cannot have the same names

[MetaLearner]
type='SingleAgentMetaLearner'
start_mode="production"
optimize_env_hp=False
optimize_learner_hp=False
evolution=False

[Learner]
type='UnityLearner'
using_buffer=True
episodes=1000
load_agents=False
; load_agents = 'runs/ML-MountainCarContinuous-v0-10-31-20:00'

[Algorithm]
algorithm='DDPG'
type="ContinuousDDPGAlgorithm"
exploration_steps=12000
replay_buffer=True
loss_function='MSELoss'
regularizer=0
recurrence=0
gamma=0.99
beta=0
epsilon_start=1
epsilon_end=0.02
epsilon_decay=0.00005
c=200
tau=0.99


; This would need to change a lot
; Maybe make a dummy environment
[Environment]
type='UnityEnvironment2'
; exec='shiva/envs/unitybuilds/3DBall/3DBall.x86_64'
; env_name='3DBall'
; exec='shiva/envs/unitybuilds/Basic/Basic.x86_64'
; env_name='Basic'
exec='shiva/envs/unitybuilds/PushBlock/PushBlock.x86_64'
env_name='PushBlock'
worker_id = 0
train_mode = True
discrete_action_size = 6
continuous_action_size = 0

render=True
num_agents=1
port=12345
normalize=False
b=1
a=-1
min=-1
max=100

[Buffer]
type='SimpleBuffer'
capacity=12_000
batch_size = 64
num_agents=1

[Agent]
num_agents=1
optimizer_function='Adam'
learning_rate=0.0003

[Network]
actor = {'layers': [400, 300], 'activation_function': ['ReLU', 'ReLU'], 'output_function': None, 'last_layer': True}
critic_head = {'layers': [400], 'activation_function': ['ReLU'], 'output_function': None, 'last_layer': False}
critic_tail = {'layers': [300], 'activation_function': ['ReLU'], 'output_function': None, 'last_layer': True}


[ImageProcessing]


[VideoProcessing]


