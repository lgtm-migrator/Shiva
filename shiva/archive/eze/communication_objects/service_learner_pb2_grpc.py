# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from shiva.core.communication_objects import configs_pb2 as shiva_dot_core_dot_communication__objects_dot_configs__pb2
from shiva.core.communication_objects import helpers_pb2 as shiva_dot_core_dot_communication__objects_dot_helpers__pb2

class LearnerStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SendSpecs = channel.unary_unary(
        '/communication_objects.Learner/SendSpecs',
        request_serializer=shiva_dot_core_dot_communication__objects_dot_helpers__pb2.SimpleMessage.SerializeToString,
        response_deserializer=shiva_dot_core_dot_communication__objects_dot_helpers__pb2.Empty.FromString,
        )
    self.SendConfig = channel.unary_unary(
        '/communication_objects.Learner/SendConfig',
        request_serializer=shiva_dot_core_dot_communication__objects_dot_configs__pb2.ConfigProto.SerializeToString,
        response_deserializer=shiva_dot_core_dot_communication__objects_dot_helpers__pb2.Empty.FromString,
        )
    self.SendTrajectories = channel.unary_unary(
        '/communication_objects.Learner/SendTrajectories',
        request_serializer=shiva_dot_core_dot_communication__objects_dot_helpers__pb2.SimpleMessage.SerializeToString,
        response_deserializer=shiva_dot_core_dot_communication__objects_dot_helpers__pb2.Empty.FromString,
        )


class LearnerServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def SendSpecs(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SendConfig(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SendTrajectories(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_LearnerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SendSpecs': grpc.unary_unary_rpc_method_handler(
          servicer.SendSpecs,
          request_deserializer=shiva_dot_core_dot_communication__objects_dot_helpers__pb2.SimpleMessage.FromString,
          response_serializer=shiva_dot_core_dot_communication__objects_dot_helpers__pb2.Empty.SerializeToString,
      ),
      'SendConfig': grpc.unary_unary_rpc_method_handler(
          servicer.SendConfig,
          request_deserializer=shiva_dot_core_dot_communication__objects_dot_configs__pb2.ConfigProto.FromString,
          response_serializer=shiva_dot_core_dot_communication__objects_dot_helpers__pb2.Empty.SerializeToString,
      ),
      'SendTrajectories': grpc.unary_unary_rpc_method_handler(
          servicer.SendTrajectories,
          request_deserializer=shiva_dot_core_dot_communication__objects_dot_helpers__pb2.SimpleMessage.FromString,
          response_serializer=shiva_dot_core_dot_communication__objects_dot_helpers__pb2.Empty.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'communication_objects.Learner', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
