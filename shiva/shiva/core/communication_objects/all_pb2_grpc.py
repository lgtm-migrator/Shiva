# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import communication_objects.all_pb2 as all__pb2


class EnvironmentStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Step = channel.unary_unary(
        '/shiva.core.communication_objects.Environment/Step',
        request_serializer=all__pb2.EnvStepInput.SerializeToString,
        response_deserializer=all__pb2.EnvStepOutput.FromString,
        )


class EnvironmentServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Step(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_EnvironmentServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Step': grpc.unary_unary_rpc_method_handler(
          servicer.Step,
          request_deserializer=all__pb2.EnvStepInput.FromString,
          response_serializer=all__pb2.EnvStepOutput.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'shiva.core.communication_objects.Environment', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
